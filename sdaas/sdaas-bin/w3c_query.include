if [ ! -z ${__module_w3c_query+x} ]; then return ; else __module_w3c_query=1 ; fi

SD_REQUIRES_VAR SD_DEBUG SD_CACHE SD_VERBOSE SD_SPARQL_QUERY_ENDPOINT 
SD_REQUIRES_CMD SD_DEBUG_INFO curl

SD_SPARQL_QUERY_CURL_OPTIONS="$2"

SD_LOAD_RETRY=${SD_LOAD_RETRY:=3}
SD_MAX_RETRY_TIME=${SD_MAX_RETRY_TIME:=60}


function SD_SPARQL_QUERY {
	local accept="$1"
	local query="$2"
	local traceFile=${3:-$(SD_MK_DEBUG_TMP_FILE sparql_query_trace)}
	SD_DEBUG_INFO  "SD_SPARQL_QUERY '$accept' '${query:0:40}...'" 
	curl -X POST \
		--silent \
		--retry $SD_LOAD_RETRY --retry-delay 5 --retry-max-time $SD_MAX_RETRY_TIME \
		--data-binary "$query" \
		--header 'Content-Type: application/sparql-query' \
		--header "Accept: $accept" \
		--trace-ascii "$traceFile" \
		-f ${SD_SPARQL_QUERY_CURL_OPTIONS} "$SD_SPARQL_QUERY_ENDPOINT" || SD_FATAL_ERROR "Query error, see $traceFile"
	if [ $SD_DEBUG -eq 0 ] && [ -f "$traceFile" ]; then  rm -f "$traceFile" ; fi
}

