if [ ! -z ${__module_answering+x} ]; then return ; else __module_answering=1 ; fi

SD_REQUIRES_CMD awk

#  extra files to be copied in the distribution
function SD_CREATE_DATA_DISTRIBUTION {
	_SD_DIST_DIR=${_SD_DIST_DIR:="distrib/$(date +'%s')"}
	mkdir -p "$_SD_DIST_DIR"
	local query
	for query in questions/*.* ; do
		local filename=$(basename "$query")
		local extension="${filename##*.}"
		local filename="${filename%.*}"
		case "$extension" in
			sparql)			
				SD_LOG "Generating answers for $filename tabular question"
				SD_SPARQL_QUERY "text/csv"  "@$query" >  "$_SD_DIST_DIR/$filename.csv"
				;;
			construct)		
				SD_LOG "Generating answers for $filename graph question"
				SD_SPARQL_QUERY "text/turtle" "@$query" >  "$_SD_DIST_DIR/$filename.ttl"
				;;
			script)
				SD_LOG "Generating answers from script in $_SD_DIST_DIR"
				. $query
				;;
			md)
				SD_LOG "Copying $query"
				cp $query "$_SD_DIST_DIR"
		esac 
	done
	
	# Copy other files
	for var in "$@" ;do
		if [ -f "$var" ]; then
			cp "$var" "$_SD_DIST_DIR"
		fi
	done

	
	printf "\n\n# Key answers #\n\n" >> "$_SD_DIST_DIR/README.md"
	for query in $(find "$_SD_DIST_DIR" -type f -regextype posix-extended -regex '.*(csv|ttl)$'  -print | sort); do
		printf " . $(basename "$query")\n" >> "$_SD_DIST_DIR/README.md"
	done
	
	printf "\n\n-------\nData extracted on $(date) from knowledge base\n" >> "$_SD_DIST_DIR/README.md"
	
	SD_LOG "Distribution completed in $_SD_DIST_DIR:"
}

