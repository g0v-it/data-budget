#!/usr/bin/env bash
set -a

GRAPH="http://mef.linkeddata.cloud/resource/"


####################################################
SD_LOG  "Loading external resources..."
####################################################
SD_LEARN http://publications.europa.eu/resource/authority/currency/EUR


####################################################
SD_LOG  "Starting learning window: loading facts. This will take a while..."
####################################################
SD_LEARN urn:sdaas:config "data/kees.ttl"
SD_LEARN $GRAPH/g0v_app "data/g0v_app.ttl"


####################################################
SD_LOG  "Starting learning window: loading facts. This will take a while..."
####################################################
function G0V_LEARN_FROM_BDAP {
	local reportType="$1"
	local year="$2"
	
	local reportName="spd_${reportType}_spe_elb_cap_01_${year}"	
	local uri="https://bdap-opendata.mef.gov.it/SpodCkanApi/api/1/rest/dataset/${reportName}"
	SD_LEARN "http://reference.data.gov.uk/doc/gregorian-interval/${year}-01-01T00:00:00/P1Y"
	SD_LEARN "${uri}" "${uri}" "|in|out|.ttl|iconv -f 'windows-1252' -t 'UTF-8' - |php7 gateways/bdap_meta.php"
	SD_LEARN "${uri}.csv" "${uri}.csv" "|in|out|.ttl|iconv -f 'windows-1252' -t 'UTF-8' - |php7 gateways/bdap.php ${reportName}"
}

## Report type:
##   lbf = Legge Di Bilancio Approvata
##   dlb = Disegno di Legge Di Bilancio
##   rnd = Bilancio consolidato
G0V_LEARN_FROM_BDAP lbf 2019
G0V_LEARN_FROM_BDAP dlb 2019
G0V_LEARN_FROM_BDAP lbf 2018
G0V_LEARN_FROM_BDAP lbf 2017


SD_LEARN urn:mef:programmi data/descrizione_programmi.csv "|||.ttl|php7 gateways/programmi.php spd_lbf_spe_elb_cap_01_2019"
#SD_LEARN urn:copernicani:nomi_azioni "https://docs.google.com/spreadsheets/d/e/2PACX-1vTs9jWocG_xYjgp4JmKcH6o_7piJ9b4t--c-kx_xf6Erkp_-ad-4Fj0MRY2Eyd0AA9-LZ94pTwDv4na/pub?output=csv" "|||.ttl|php7 gateways/account_names.php"



####################################################
SD_LOG  "Starting reasoning window: computing axioms "
####################################################
for axiomFile in $(ls -v axioms/*sparql_update); do
	SD_SPARQL_UPDATE @$axiomFile
done


####################################################
SD_LOG  "Testing..."
####################################################
for testFile in $(ls -v tests/*ask); do
    echo -n "   $(basename $testFile)..."
    case "$(SD_SPARQL_QUERY xml @$testFile)" in
        *true* ) echo "OK";;
        *false* ) echo "FAIL";;
    esac
done


SD_THATS_ALL_FOLKS