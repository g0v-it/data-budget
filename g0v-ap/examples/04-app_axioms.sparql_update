##
## APPLICATION LEVEL AXIOM: generate type and main application property for the lowest level of component.
##
PREFIX g0v: <http://data.budget.g0v.it/g0v-ap/v1#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#> 
PREFIX : <http://data.budget.g0v.it/g0v-ap-api/v1#>

INSERT {
	?component a :Account ;
       :amount ?amount;
       :name ?name;
       :topPartitionLabel ?top_partition_label;
       :secondPartitionLabel ?second_partition_label
} WHERE {
	{
		SELECT ?component (SUM (?fact_amount) AS ?amount) WHERE {
		  ?component a g0v:Component.
		  ?fact a g0v:Fact; g0v:isPartOf ?component; g0v:amount ?fact_amount  
		} GROUP BY ?component
	}

	?component g0v:concept ?account_subject.
	?account_subject skos:prefLabel ?name ; 
	# get mission label
	skos:broader/skos:broader/skos:prefLabel ?second_partition_label;
	# get administration label
	skos:broader/skos:broader/skos:broader/skos:prefLabel ?top_partition_label
}

;



##
## APPLICATION LEVEL AXIOM: inherit Account refPeriod, unit and dataset from children.
##
PREFIX g0v: <http://data.budget.g0v.it/g0v-ap/v1#>
PREFIX qb: <http://purl.org/linked-data/cube#>
PREFIX : <http://data.budget.g0v.it/g0v-ap-api/v1#>

INSERT { ?component :unit ?unit; :refPeriod ?ref_period; :dataSet ?dataset} 
WHERE {
	?component a :Account.	
	?fact a g0v:Fact; 
		g0v:isPartOf ?component;
		g0v:unit ?unit;
		g0v:refPeriod ?ref_period;
		qb:dataSet ?dataset
}

;

##
## APPLICATION LEVEL AXIOM: election of the most updated dataset.
##
PREFIX g0v: <http://data.budget.g0v.it/g0v-ap/v1#>
PREFIX qb: <http://purl.org/linked-data/cube#>
PREFIX : <http://data.budget.g0v.it/g0v-ap-api/v1#>

INSERT { ?dataset a :ReferenceDataset} 
WHERE {
	{
		SELECT  ?dataset WHERE {
			?component a :Account; :dataSet ?dataset.
			?dataset g0v:refPeriod ?ref_period;
		} ORDER BY DESC(?ref_period) LIMIT 1
	}
	FILTER NOT EXISTS { ?dataset a :ReferenceDataset }
}

;
##
## APPLICATION LEVEL AXIOM: election of the all ReferenceAccount.
##
PREFIX : <http://data.budget.g0v.it/g0v-ap-api/v1#>

INSERT { ?account a :ReferenceAccount} 
WHERE {
	?account a :Account; :dataSet ?dataset.
	?dataset a :ReferenceDataset;
}

;


##
## APPLICATION LEVEL AXIOM: attach Account History to all reference accounts
##
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX g0v: <http://data.budget.g0v.it/g0v-ap/v1#>
PREFIX : <http://data.budget.g0v.it/g0v-ap-api/v1#>

INSERT { ?component :hasHistoryRec ?history_rec } 
WHERE {
	?component a :ReferenceAccount; 
		:dataSet ?dataset;
		:refPeriod ?ref_period; 
		g0v:concept/skos:closeMatch ?close_match.
	?history_rec a :Account; :refPeriod ?history_ref_period ; g0v:concept ?close_match.
	?dataset a :ReferenceDataset.
  
    FILTER( STR(?history_ref_period) < STR(?ref_period) )
}

;

##
## APPLICATION LEVEL AXIOM: compute the last_amount property for each Reference Account.
##
PREFIX : <http://data.budget.g0v.it/g0v-ap-api/v1#>

INSERT { ?account :last_amount ?last_amount} 
WHERE {  
    
    {
		SELECT DISTINCT ?account  ( MAX(?history_rec) AS ?newer_history_rec)
		WHERE {
		  ?account a :Account; :hasHistoryRec ?history_rec .  
		} GROUP BY ?account 
	}
    
  	?newer_history_rec :amount ?last_amount.
 	FILTER NOT EXISTS { ?account :last_amount ?last_amount} 
}

;

##
## APPLICATION LEVEL AXIOM: create an api accountTopPartition summary
##

PREFIX : <http://data.budget.g0v.it/g0v-ap-api/v1#>
INSERT {
	?accountUriTopPartition a :AccountTopPartition ;
       :amount ?amount;
       :label ?top_partition_label;
} WHERE {
  	{
		SELECT ?top_partition_label (SUM (?account_amount) AS ?amount)
        WHERE {
          ?accountUri a :ReferenceAccount;
                        :amount ?account_amount;
                        :topPartitionLabel ?top_partition_label;
        } GROUP BY ?top_partition_label 
	}
  
	BIND( UUID() AS ?accountUriTopPartition )
}

;

##
## APPLICATION LEVEL AXIOM: create an api accountSecondPartition
##

PREFIX : <http://data.budget.g0v.it/g0v-ap-api/v1#>
INSERT {
	?accountUriSecondPartition a :AccountSecondPartition ;
       :amount ?amount;
       :label ?second_partition_label;
} WHERE {
  	{
		SELECT ?second_partition_label (SUM (?account_amount) AS ?amount)
        WHERE {
          ?accountUri a :ReferenceAccount;
                        :amount ?account_amount;
                        :secondPartitionLabel ?second_partition_label;
        }GROUP BY ?second_partition_label 
	}
  
	BIND( UUID() AS ?accountUriSecondPartition )
}

;
##
## AXIOM: Create account unique identifiers
##
PREFIX : <http://data.budget.g0v.it/g0v-ap-api/v1#>

INSERT { ?component :identifier ?id } 
WHERE { 
	?component a :Account.
	BIND( MD5(STR(?component)) AS ?id )
	
	FILTER NOT EXISTS { ?component :identifier  [] } 
}
	